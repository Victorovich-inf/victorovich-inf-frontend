name: Build docker container

on:
  push:
    branches: [ main ]

  #Allow to run this workflow manually from the Actions tab in github
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: admin-crm
  DOCKER_BUILD_PATH: .
  DOCKER_REGISTRY: cr.yandex/crpu311m497t82hrsi9t

  DOCKER_REGISTRY_LOGIN: json_key
  DOCKERFILE: .docker/Dockerfile

  PROJECT: admin-lk

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository content
        uses: actions/checkout@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_REGISTRY_LOGIN }}
          password: ${{ secrets.DOCKER_CREDENTIALS }}

      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: build
        env:
          CI: false

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build and push docker container
        uses: docker/build-push-action@v2
        with:
          provenance: false
          push: true
          file: ${{ env.DOCKERFILE }}
          context: ${{ env.DOCKER_BUILD_PATH }}
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.GITHUB_SHA_SHORT }}-${{ env.GITHUB_REF_SLUG }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository content
        uses: actions/checkout@v1

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Create docker credentials file
        run: |
          echo "$DOCKER_CREDENTIALS" > .ansible/key.json
        env:
          DOCKER_CREDENTIALS: ${{ secrets.DOCKER_CREDENTIALS }}

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: admin-crm.yml
          directory: .ansible/
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          options: |
            --inventory inventory/nodes.yml
        env:
          IMAGE_VERSION: ${{ env.GITHUB_SHA_SHORT }}-${{ env.GITHUB_REF_SLUG }}
          DOCKER_CREDENTIALS: ${{ secrets.DOCKER_CREDENTIALS }}
